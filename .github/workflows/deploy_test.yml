name: Test Deployment
# on: push
on:
  push:
    branches:
      - main
env:
  DEPLOYMENT_ENV: staging
  DEPLOY_ENV: test
  # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_TEST }}
  # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_TEST }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_PROD }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_PROD }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  QUEUE_URL: https://sqs.us-east-1.amazonaws.com/${{ vars.AWS_ACCOUNT_ID_PROD }}
  HOST_BD: ${{ vars.HOST_BD_TEST }}
  USER_BD: ${{ vars.USER_BD_TEST }}
  BD_PASS: ${{ secrets.BD_PASS_TEST }}
jobs:
  starter:
    runs-on: ubuntu-latest
    outputs:
      gchatthreadid: ${{ steps.launchNotify.outputs.gchatthreadid }}
      change_db: ${{ steps.changesDatabase.outputs.change_db }}
    steps:
      - name: ~ Get code ~
        id: GetCode
        uses: actions/checkout/@v4
      - name: Install Notify
        run: npm ci
        working-directory: .github/notify
      - name: Init Notify
        id: launchNotify
        run: |
          node .github/notify/notify.js tipo=init '${{ toJson(github) }}'
      - name: Check DB changes
        id: changesDatabase
        run: |
          if [ -s .github/scripts/act_bds_sql.sql ]; then
            echo "change_db=true" >> $GITHUB_OUTPUT
          else
            echo "change_db=false" >> $GITHUB_OUTPUT
          fi
          cat $GITHUB_OUTPUT
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: starter
  #   strategy:
  #     matrix:
  #       micros: [films, people]
  #   steps:
  #     - name: ~ Get code ~
  #       id: GetCode
  #       uses: actions/checkout/@v4

  #     - name: Install Notify
  #       run: npm ci
  #       working-directory: .github/notify

  #     - name: Install serverless
  #       run: npm i -g serverless

  #     - name: ~ Install dependencies ~
  #       run: npm ci --also=dev

  #     - name: ~ Install dependencies ${{ matrix.micros }} ~
  #       id: InstallDepsMicro
  #       run: npm ci --also=dev
  #       working-directory: ./micros/${{ matrix.micros }}

  #     - name: Configure aws credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-region: ${{ env.AWS_DEFAULT_REGION }}

  #     - name: ~ Create env ~
  #       run: echo -e "HOST_BD=${{env.HOST_BD}}\nUSER_BD=${{env.USER_BD}}\nBD_PASS=${{env.BD_PASS}}" > .env.local
  #       working-directory: ./libs

  #     - name: Edit Jest config
  #       shell: bash
  #       run: |
  #         echo $(jq --arg micro "${{ matrix.micros }}" '.roots[0] = "<rootDir>/micros/\($micro)"' jest.config.json) > jest.config.json

  #     - name: ~ Run tests ~
  #       id: RunTests
  #       run: npm test

  #     - name: ~ Deploy microservice ${{ matrix.micros }} ~
  #       id: DeployMicro
  #       run: sls deploy -s ${{ env.DEPLOY_ENV }}
  #       working-directory: ./micros/${{ matrix.micros }}

  #     - name: Notify
  #       id: notify
  #       run: |
  #         node .github/notify/notify.js tipo=report "${{ github.job }} > ${{ matrix.micros }}" ${{ job.status }} '${{ toJson(steps) }}' ${{ needs.starter.outputs.gchatthreadid }}
  act_bd:
    runs-on: ubuntu-latest
    needs: starter
    if: needs.starter.outputs.change_db == 'true'
    steps:
      - name: ~ Get code ~
        id: GetCode
        uses: actions/checkout/@v4
      - name: Install Notify
        run: npm ci
        working-directory: .github/notify
      - name: Actualizar BDs
        id: CorrerScriptBDs
        run: |
          echo "Por iniciar proceso ..."
          exec .github/scripts/act_bds.sh ${{env.HOST_BD}} ${{env.USER_BD}} ${{env.BD_PASS}}
          echo "Proceso finalizado"
      - name: Notify
        id: notify
        run: |
          node .github/notify/notify.js tipo=report ${{ github.job }} ${{ job.status }} '${{ toJson(steps) }}' ${{ needs.starter.outputs.gchatthreadid }}
  finalizer:
    runs-on: ubuntu-latest
    needs: [ starter ]
    steps:
      - name: ~ Get code ~
        id: GetCode
        uses: actions/checkout/@v4
      - name: Install Notify
        run: npm ci
        working-directory: .github/notify
      - name: Notify
        id: notify
        run: |
          node .github/notify/notify.js tipo=end ${{ needs.starter.outputs.gchatthreadid }}
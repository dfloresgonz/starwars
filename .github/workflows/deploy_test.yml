name: Test Deployment
# on: push
on:
  push:
    branches:
      - main
env:
  DEPLOYMENT_ENV: staging
  # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_TEST }}
  # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_TEST }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_PROD }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY_PROD }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  QUEUE_URL: https://sqs.us-east-1.amazonaws.com/${{ vars.AWS_ACCOUNT_ID_PROD }}
  HOST_BD: ${{ vars.HOST_BD_TEST }}
  USER_BD: ${{ vars.USER_BD_TEST }}
  BD_PASS: ${{ secrets.BD_PASS_TEST }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        micros: [films, people]
    steps:

      - name: ~ Get code ~
        id: GetCode
        uses: actions/checkout/@v4

      - name: Install serverless
        run: npm i -g serverless

      - name: ~ Install dependencies ~
        id: InstallDeps
        run: npm ci --also=dev

      - name: ~ Install dependencies ${{ matrix.micros }} ~
        id: InstallDepsMicros
        run: npm ci --also=dev
        working-directory: ./micros/${{ matrix.micros }}
      
      # - name: ~ Install dependencies People ~
      #   id: InstallDepsPeople
      #   run: npm ci --also=dev
      #   working-directory: ./micros/people

      # - name: ~ Install dependencies Films ~
      #   id: InstallDepsFilms
      #   run: npm ci --also=dev
      #   working-directory: ./micros/films

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: ~ Create env ~
        id: CreateEnv
        run: echo -e "HOST_BD=${{env.HOST_BD}}\nUSER_BD=${{env.USER_BD}}\nBD_PASS=${{env.BD_PASS}}" > .env.local
        working-directory: ./libs

      # - name: ~ Run tests ~
      #   id: RunTests
      #   run: npm test

      - name: ~ Deploy microservice ${{ matrix.micros }} ~
        id: DeployMicros
        run: sls deploy -s test
        working-directory: ./micros/${{ matrix.micros }}
      
      # - name: ~ Deploy microservice People ~
      #   id: DeployMSPeople
      #   run: sls deploy -s test
      #   working-directory: ./micros/people
      
      # - name: ~ Deploy microservice Films ~
      #   id: DeployMSFilms
      #   run: sls deploy -s test
      #   working-directory: ./micros/films

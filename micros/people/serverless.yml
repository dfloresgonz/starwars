service: starwars-backend-peopletypes

configValidationMode: error

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'test'}
  region: us-east-1
  iam:
    role:
      managedPolicies:
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
  environment: ${file(../../libs/configs.js)}

package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!./**'

plugins:
  - serverless-offline
  # - serverless-openapi-documentation
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    minify: true
  # documentation: ${file(serverless.doc.yml):documentation}

functions:
  listPeople:
    handler: get-all-people/handler.method
    timeout: 8
    events:
      - http:
          method: get
          path: api/general/listPeople
          # documentation: ${file(serverless.doc.yml):documentation.endpoints.listPeople}
    # package:
    #   include:
        # - './get-all-people/**'
        # - './database.js'
        # - './secret.js'
        # - './utils/**'
    layers:
      - ${cf:layers5-dev.Dependencias5LayerExport}
  
  # createPerson:
  #   handler: create-new-person/handler.method
  #   timeout: 8
  #   events:
  #     - http:
  #         method: post
  #         path: people/createPerson
  #         documentation: ${file(serverless.doc.yml):documentation.endpoints.createPerson}
  #   package:
  #     include:
  #       - './create-new-person/**'
  #       - './database.js'
  #       - './secret.js'
  #       - './utils/**'
  #   layers:
  #     - ${cf:layers5-dev.Dependencias5LayerExport}

  listPeopleSWAPI:
    handler: get-people-swapi/handler.method
    timeout: 8
    events:
      - http:
          method: get
          path: api/general/listPeopleSWAPI
    # package:
    #   include:
    #     - './get-people-swapi/**'
    #     - './utils/**'
    layers:
      - ${cf:layers5-dev.Dependencias5LayerExport}
